{"version":3,"sources":["track.ts"],"names":["appsFlyer","event","properties","revenue","extractRevenue","currency","extractCurrency","otherProperties","Object","entries","filter","key","reduce","acc","val","logEvent","af_revenue","af_currency","parseFloat","defaultCurrency"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,wBAAtB;AAKA,gBAAgBC,KAAD,IAA2B;AACxC,QAAMC,UAAU,GAAGD,KAAK,CAACC,UAAN,IAAoB,EAAvC;AAEA,QAAMC,OAAO,GAAGC,cAAc,CAAC,SAAD,EAAYF,UAAZ,CAA9B;AACA,QAAMG,QAAQ,GAAGC,eAAe,CAAC,UAAD,EAAaJ,UAAb,EAAyB,KAAzB,CAAhC;;AAEA,MAAIC,OAAO,IAAIE,QAAf,EAAyB;AACvB,UAAME,eAAe,GAAGC,MAAM,CAACC,OAAP,CAAeP,UAAf,EACrBQ,MADqB,CACd;AAAA,UAAC,CAACC,GAAD,CAAD;AAAA,aAAWA,GAAG,KAAK,SAAR,IAAqBA,GAAG,KAAK,UAAxC;AAAA,KADc,EAErBC,MAFqB,CAEd,CAACC,GAAD,YAAiC;AAAA,UAAf,CAACF,GAAD,EAAMG,GAAN,CAAe;AACvCD,MAAAA,GAAG,CAACF,GAAD,CAAH,GAAWG,GAAX;AACA,aAAOD,GAAP;AACD,KALqB,EAKnB,EALmB,CAAxB;AAOAb,IAAAA,SAAS,CAACe,QAAV,CAAmBd,KAAK,CAACA,KAAzB,EAAgC,EAC9B,GAAGM,eAD2B;AAE9BS,MAAAA,UAAU,EAAEb,OAFkB;AAG9Bc,MAAAA,WAAW,EAAEZ;AAHiB,KAAhC;AAKD,GAbD,MAaO;AACLL,IAAAA,SAAS,CAACe,QAAV,CAAmBd,KAAK,CAACA,KAAzB,EAAgCC,UAAhC;AACD;AACF,CAtBD;;AAwBA,MAAME,cAAc,GAAG,CAACO,GAAD,EAAcT,UAAd,KAAwD;AAC7E,MAAI,CAACA,UAAU,CAACS,GAAD,CAAf,EAAsB;AACpB,WAAO,IAAP;AACD;;AAED,UAAQ,OAAOT,UAAU,CAACS,GAAD,CAAzB;AACE,SAAK,QAAL;AACE,aAAOT,UAAU,CAACS,GAAD,CAAjB;;AACF,SAAK,QAAL;AACE,aAAOO,UAAU,CAAChB,UAAU,CAACS,GAAD,CAAX,CAAjB;;AACF;AACE,aAAO,IAAP;AANJ;AAQD,CAbD;;AAeA,MAAML,eAAe,GAAG,CACtBK,GADsB,EAEtBT,UAFsB,EAGtBiB,eAHsB,KAInB;AACH,SAAOjB,UAAU,CAACS,GAAD,CAAV,IAAmBQ,eAA1B;AACD,CAND","sourcesContent":["import appsFlyer from 'react-native-appsflyer';\nimport type { TrackEventType } from '@segment/analytics-react-native';\n\ntype Properties = { [key: string]: any };\n\nexport default (event: TrackEventType) => {\n  const properties = event.properties || {};\n\n  const revenue = extractRevenue('revenue', properties);\n  const currency = extractCurrency('currency', properties, 'USD');\n\n  if (revenue && currency) {\n    const otherProperties = Object.entries(properties)\n      .filter(([key]) => key !== 'revenue' && key !== 'currency')\n      .reduce((acc: Properties, [key, val]) => {\n        acc[key] = val;\n        return acc;\n      }, {});\n\n    appsFlyer.logEvent(event.event, {\n      ...otherProperties,\n      af_revenue: revenue,\n      af_currency: currency,\n    });\n  } else {\n    appsFlyer.logEvent(event.event, properties);\n  }\n};\n\nconst extractRevenue = (key: string, properties: Properties): number | null => {\n  if (!properties[key]) {\n    return null;\n  }\n\n  switch (typeof properties[key]) {\n    case 'number':\n      return properties[key];\n    case 'string':\n      return parseFloat(properties[key]);\n    default:\n      return null;\n  }\n};\n\nconst extractCurrency = (\n  key: string,\n  properties: Properties,\n  defaultCurrency: string\n) => {\n  return properties[key] || defaultCurrency;\n};\n"]}