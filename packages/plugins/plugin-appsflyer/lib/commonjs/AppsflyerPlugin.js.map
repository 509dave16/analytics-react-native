{"version":3,"sources":["AppsflyerPlugin.tsx"],"names":["AppsflyerPlugin","DestinationPlugin","PluginType","destination","appsFlyer","onInstallConversionData","res","af_status","media_source","campaign","is_first_launch","data","properties","provider","key","source","name","analytics","track","onAppOpenAttribution","status","update","settings","_","defaultOpts","isDebug","timeToWaitForATTUserAuthorization","onInstallConversionDataListener","appsflyerSettings","integrations","undefined","clientConfig","getConfig","trackAttributionData","hasRegisteredInstallCallback","registerConversionCallback","trackDeepLinks","hasRegisteredDeepLinkCallback","registerDeepLinkCallback","hasInitialized","initSdk","devKey","appsFlyerDevKey","appId","appleAppID","onDeepLinkListener","identify","event"],"mappings":"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","sourcesContent":["import {\n  DestinationPlugin,\n  IdentifyEventType,\n  PluginType,\n  TrackEventType,\n  UpdateType,\n  SegmentAPISettings,\n} from '@segment/analytics-react-native';\nimport type { SegmentAppsflyerSettings } from './types';\nimport appsFlyer from 'react-native-appsflyer';\nimport identify from './methods/identify';\nimport track from './methods/track';\n\nexport class AppsflyerPlugin extends DestinationPlugin {\n  type = PluginType.destination;\n  key = 'AppsFlyer';\n\n  private settings: SegmentAppsflyerSettings | null = null;\n  private hasRegisteredInstallCallback: boolean = false;\n  private hasRegisteredDeepLinkCallback: boolean = false;\n  private hasInitialized: boolean = false;\n\n  update(settings: SegmentAPISettings, _: UpdateType) {\n    let defaultOpts = {\n      isDebug: false,\n      timeToWaitForATTUserAuthorization: 60,\n      onInstallConversionDataListener: true,\n    };\n\n    const appsflyerSettings = settings.integrations[\n      this.key\n    ] as SegmentAppsflyerSettings;\n\n    if (appsflyerSettings === undefined) {\n      return;\n    }\n    const clientConfig = this.analytics?.getConfig();\n\n    this.settings = appsflyerSettings;\n\n    if (\n      this.settings.trackAttributionData &&\n      !this.hasRegisteredInstallCallback\n    ) {\n      this.registerConversionCallback();\n      this.hasRegisteredInstallCallback = true;\n    }\n\n    if (\n      clientConfig?.trackDeepLinks === true &&\n      !this.hasRegisteredDeepLinkCallback\n    ) {\n      this.registerDeepLinkCallback();\n      this.hasRegisteredDeepLinkCallback = true;\n    }\n    if (!this.hasInitialized) {\n      appsFlyer.initSdk({\n        devKey: this.settings.appsFlyerDevKey,\n        appId: this.settings.appleAppID,\n        onDeepLinkListener: clientConfig?.trackDeepLinks === true,\n        ...defaultOpts,\n      });\n      this.hasInitialized = true;\n    }\n  }\n\n  identify(event: IdentifyEventType) {\n    identify(event);\n    return event;\n  }\n\n  track(event: TrackEventType) {\n    track(event);\n    return event;\n  }\n\n  registerConversionCallback = () => {\n    appsFlyer.onInstallConversionData((res) => {\n      const { af_status, media_source, campaign, is_first_launch } = res?.data;\n      const properties = {\n        provider: this.key,\n        campaign: {\n          source: media_source,\n          name: campaign,\n        },\n      };\n\n      if (is_first_launch === 'true') {\n        if (af_status === 'Non-organic') {\n          this.analytics?.track('Install Attributed', properties);\n        } else {\n          this.analytics?.track('Organic Install', { provider: 'AppsFlyer' });\n        }\n      }\n    });\n  };\n\n  registerDeepLinkCallback = () => {\n    appsFlyer.onAppOpenAttribution((res) => {\n      if (res?.status === 'success') {\n        const { campaign, media_source } = res.data;\n        const properties = {\n          provider: this.key,\n          campaign: {\n            name: campaign,\n            source: media_source,\n          },\n        };\n        this.analytics?.track('Deep Link Opened', properties);\n      }\n    });\n  };\n}\n"]}