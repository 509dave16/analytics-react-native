{"version":3,"sources":["alias.ts"],"names":["event","mixpanel","analytics","distinctId","newId","userId","getDistinctId","e","logger","warn","alias"],"mappings":"AAIA,gBAAe,OACbA,KADa,EAEbC,QAFa,EAGbC,SAHa,KAIV;AACH,MAAIC,UAAU,GAAG,EAAjB;AACA,QAAMC,KAAK,GAAGJ,KAAK,CAACK,MAApB;;AAEA,MAAI;AACFF,IAAAA,UAAU,GAAG,MAAMF,QAAQ,CAACK,aAAT,EAAnB;AACD,GAFD,CAEE,OAAOC,CAAP,EAAU;AACVL,IAAAA,SAAS,CAACM,MAAV,CAAiBC,IAAjB,CAAsBF,CAAtB;AACD;;AACD,MAAIJ,UAAU,KAAK,EAAnB,EAAuB;AACrBF,IAAAA,QAAQ,CAACS,KAAT,CAAeN,KAAf,EAAsBD,UAAtB;AACD;AACF,CAhBD","sourcesContent":["import type { Mixpanel } from 'mixpanel-react-native';\nimport type { AliasEventType } from '@segment/analytics-react-native';\nimport type { SegmentClient } from '@segment/analytics-react-native/src/analytics';\n\nexport default async (\n  event: AliasEventType,\n  mixpanel: Mixpanel,\n  analytics: SegmentClient\n) => {\n  let distinctId = '';\n  const newId = event.userId as string;\n\n  try {\n    distinctId = await mixpanel.getDistinctId();\n  } catch (e) {\n    analytics.logger.warn(e);\n  }\n  if (distinctId !== '') {\n    mixpanel.alias(newId, distinctId);\n  }\n};\n"]}