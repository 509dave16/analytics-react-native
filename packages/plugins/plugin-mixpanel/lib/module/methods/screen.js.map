{"version":3,"sources":["screen.ts"],"names":["track","event","mixpanel","settings","callTrack","eventName","properties","consolidatedPageCalls","name","undefined","trackAllPages","trackNamedPages","trackCategorizedPages","category"],"mappings":"AAIA,OAAOA,KAAP,MAAkB,SAAlB;AAEA,gBAAe,CACbC,KADa,EAEbC,QAFa,EAGbC,QAHa,KAIV;AAAA;;AACH,QAAMC,SAAS,GAAG,CAACC,SAAD,EAAoBC,UAApB,KAA4C;AAC5DN,IAAAA,KAAK,CAACK,SAAD,EAAYC,UAAZ,EAAwBH,QAAxB,EAAkCD,QAAlC,CAAL;AACD,GAFD;;AAGA,QAAMI,UAAU,GAAGL,KAAK,CAACK,UAAzB;;AAEA,MAAIH,QAAQ,CAACI,qBAAT,KAAmC,IAAvC,EAA6C;AAC3C,QAAIF,SAAS,GAAG,iBAAhB;AACA,QAAIG,IAAI,GAAGP,KAAK,CAACO,IAAjB;;AAEA,QAAIA,IAAI,KAAKC,SAAb,EAAwB;AACtBH,MAAAA,UAAU,CAACE,IAAD,CAAV,GAAmBA,IAAnB;AACD;;AAEDJ,IAAAA,SAAS,CAACC,SAAD,EAAYC,UAAZ,CAAT;AACD,GATD,MASO,IAAIH,QAAQ,CAACO,aAAT,KAA2B,IAA/B,EAAqC;AAC1C,QAAIL,SAAS,GAAI,UAASJ,KAAK,CAACO,IAAK,SAArC;AAEAJ,IAAAA,SAAS,CAACC,SAAD,EAAYC,UAAZ,CAAT;AACD,GAJM,MAIA,IAAIH,QAAQ,CAACQ,eAAT,KAA6B,IAA7B,IAAqCV,KAAK,CAACO,IAAN,KAAeC,SAAxD,EAAmE;AACxE,QAAIJ,SAAS,GAAI,UAASJ,KAAK,CAACO,IAAK,SAArC;AAEAJ,IAAAA,SAAS,CAACC,SAAD,EAAYC,UAAZ,CAAT;AACD,GAJM,MAIA,IACLH,QAAQ,CAACS,qBAAT,KAAmC,IAAnC,IACA,sBAAAX,KAAK,CAACK,UAAN,wEAAkBO,QAAlB,MAA+BJ,SAF1B,EAGL;AACA,QAAII,QAAQ,GAAGZ,KAAK,CAACK,UAAN,CAAiBO,QAAhC;AACA,QAAIR,SAAS,GAAI,UAASQ,QAAS,SAAnC;AAEAT,IAAAA,SAAS,CAACC,SAAD,EAAYC,UAAZ,CAAT;AACD;AACF,CApCD","sourcesContent":["import type { Mixpanel } from 'mixpanel-react-native';\nimport type { ScreenEventType, JsonMap } from '@segment/analytics-react-native';\nimport type { SegmentMixpanelSettings } from '../types';\n\nimport track from './track';\n\nexport default (\n  event: ScreenEventType,\n  mixpanel: Mixpanel,\n  settings: SegmentMixpanelSettings\n) => {\n  const callTrack = (eventName: string, properties: JsonMap) => {\n    track(eventName, properties, settings, mixpanel);\n  };\n  const properties = event.properties;\n\n  if (settings.consolidatedPageCalls === true) {\n    let eventName = 'Loaded a Screen';\n    let name = event.name;\n\n    if (name !== undefined) {\n      properties[name] = name;\n    }\n\n    callTrack(eventName, properties);\n  } else if (settings.trackAllPages === true) {\n    let eventName = `Viewed ${event.name} Screen`;\n\n    callTrack(eventName, properties);\n  } else if (settings.trackNamedPages === true && event.name !== undefined) {\n    let eventName = `Viewed ${event.name} Screen`;\n\n    callTrack(eventName, properties);\n  } else if (\n    settings.trackCategorizedPages === true &&\n    event.properties?.category !== undefined\n  ) {\n    let category = event.properties.category;\n    let eventName = `Viewed ${category} Screen`;\n\n    callTrack(eventName, properties);\n  }\n};\n"]}