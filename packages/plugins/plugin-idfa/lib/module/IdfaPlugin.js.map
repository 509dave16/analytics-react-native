{"version":3,"sources":["IdfaPlugin.tsx"],"names":["Plugin","PluginType","IdfaEvents","AnalyticsReactNativePluginIdfa","getTrackingAuthorizationStatus","IdfaPlugin","enrichment","configure","analytics","getTrackingStatus","addListener","res","track","then","idfa","context","set","device","catch","err","console","warn"],"mappings":";;AAAA,SAASA,MAAT,EAAiBC,UAAjB,QAAmC,iCAAnC;AAEA,SAASC,UAAT,QAA2B,cAA3B;AAEA,SAASC,8BAAT,QAA+C,kCAA/C;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAqCD,8BAA3C;AAEA,OAAO,MAAME,UAAN,SAAyBL,MAAzB,CAAgC;AAAA;AAAA;;AAAA,kCAC9BC,UAAU,CAACK,UADmB;AAAA;;AAGrCC,EAAAA,SAAS,CAACC,SAAD,EAA2B;AAClC,SAAKA,SAAL,GAAiBA,SAAjB;AAEA,SAAKC,iBAAL,GAHkC,CAKlC;AACA;;AACAP,IAAAA,UAAU,CAACQ,WAAX,CAAuB,WAAvB,EAAqCC,GAAD,IAAS;AAAA;;AAC3C,WAAKF,iBAAL;AACA,8BAAKD,SAAL,oEAAgBI,KAAhB,CAAsB,WAAtB,EAAmCD,GAAnC;AACD,KAHD;AAID;;AAEDF,EAAAA,iBAAiB,GAAG;AAClBL,IAAAA,8BAA8B,GAC3BS,IADH,CACSC,IAAD,IAAoB;AAAA;;AACxB;AACA,+BAAKN,SAAL,sEAAgBO,OAAhB,CAAwBC,GAAxB,CAA4B;AAAEC,QAAAA,MAAM,EAAE,EAAE,GAAGH;AAAL;AAAV,OAA5B;AACD,KAJH,EAKGI,KALH,CAKUC,GAAD,IAAc;AACnBC,MAAAA,OAAO,CAACC,IAAR,CAAaF,GAAb;AACD,KAPH;AAQD;;AAzBoC","sourcesContent":["import { Plugin, PluginType } from '@segment/analytics-react-native';\nimport type { SegmentClient } from '../../../core/src/analytics';\nimport { IdfaEvents } from './IdfaEvents';\nimport type { IdfaData } from './types';\nimport { AnalyticsReactNativePluginIdfa } from './AnalyticsReactNativePluginIdfa';\n\nconst { getTrackingAuthorizationStatus } = AnalyticsReactNativePluginIdfa;\n\nexport class IdfaPlugin extends Plugin {\n  type = PluginType.enrichment;\n\n  configure(analytics: SegmentClient) {\n    this.analytics = analytics;\n\n    this.getTrackingStatus();\n\n    // subscribe to IDFAQuery event\n    // emitted when we prompt a user for permission\n    IdfaEvents.addListener('IDFAQuery', (res) => {\n      this.getTrackingStatus();\n      this.analytics?.track('IDFAQuery', res);\n    });\n  }\n\n  getTrackingStatus() {\n    getTrackingAuthorizationStatus()\n      .then((idfa: IdfaData) => {\n        // update our context with the idfa data\n        this.analytics?.context.set({ device: { ...idfa } });\n      })\n      .catch((err: any) => {\n        console.warn(err);\n      });\n  }\n}\n"]}