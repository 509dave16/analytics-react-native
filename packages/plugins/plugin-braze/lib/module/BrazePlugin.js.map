{"version":3,"sources":["BrazePlugin.tsx"],"names":["DestinationPlugin","PluginType","identify","track","flush","BrazePlugin","destination","event","currentUserInfo","analytics","userInfo","get","userId","anonymousId","traits","integrations","undefined","key"],"mappings":";;AAAA,SACEA,iBADF,EAGEC,UAHF,QAKO,iCALP;AAMA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AAEA,OAAO,MAAMC,WAAN,SAA0BL,iBAA1B,CAA4C;AAAA;AAAA;;AAAA,kCAC1CC,UAAU,CAACK,WAD+B;;AAAA,iCAE3C,OAF2C;AAAA;;AAIjDJ,EAAAA,QAAQ,CAACK,KAAD,EAA2B;AAAA;;AACjC,UAAMC,eAAe,sBAAG,KAAKC,SAAR,oDAAG,gBAAgBC,QAAhB,CAAyBC,GAAzB,EAAxB,CADiC,CAGjC;AACA;;AACA,QACE,CAAAH,eAAe,SAAf,IAAAA,eAAe,WAAf,YAAAA,eAAe,CAAEI,MAAjB,MAA4BL,KAAK,CAACK,MAAlC,IACA,CAAAJ,eAAe,SAAf,IAAAA,eAAe,WAAf,YAAAA,eAAe,CAAEK,WAAjB,MAAiCN,KAAK,CAACM,WADvC,IAEA,CAAAL,eAAe,SAAf,IAAAA,eAAe,WAAf,YAAAA,eAAe,CAAEM,MAAjB,MAA4BP,KAAK,CAACO,MAHpC,EAIE;AACA,UAAIC,YAAY,GAAGR,KAAK,CAACQ,YAAzB;;AAEA,UAAIA,YAAY,KAAKC,SAArB,EAAgC;AAC9BD,QAAAA,YAAY,CAAC,KAAKE,GAAN,CAAZ,GAAyB,KAAzB;AACD;AACF,KAVD,MAUO;AACLf,MAAAA,QAAQ,CAACK,KAAD,CAAR;AACD;;AACD,WAAOA,KAAP;AACD;;AAEDJ,EAAAA,KAAK,CAACI,KAAD,EAAwB;AAC3BJ,IAAAA,KAAK,CAACI,KAAD,CAAL;AACA,WAAOA,KAAP;AACD;;AAEDH,EAAAA,KAAK,GAAG;AACNA,IAAAA,KAAK;AACN;;AAhCgD","sourcesContent":["import {\n  DestinationPlugin,\n  IdentifyEventType,\n  PluginType,\n  TrackEventType,\n} from '@segment/analytics-react-native';\nimport identify from './methods/identify';\nimport track from './methods/track';\nimport flush from './methods/flush';\n\nexport class BrazePlugin extends DestinationPlugin {\n  type = PluginType.destination;\n  key = 'Braze';\n\n  identify(event: IdentifyEventType) {\n    const currentUserInfo = this.analytics?.userInfo.get();\n\n    //check to see if anything has changed.\n    //if it hasn't changed don't send event\n    if (\n      currentUserInfo?.userId === event.userId &&\n      currentUserInfo?.anonymousId === event.anonymousId &&\n      currentUserInfo?.traits === event.traits\n    ) {\n      let integrations = event.integrations;\n\n      if (integrations !== undefined) {\n        integrations[this.key] = false;\n      }\n    } else {\n      identify(event);\n    }\n    return event;\n  }\n\n  track(event: TrackEventType) {\n    track(event);\n    return event;\n  }\n\n  flush() {\n    flush();\n  }\n}\n"]}