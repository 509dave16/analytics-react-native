{"version":3,"sources":["track.ts"],"names":["generateMapTransform","AppEventsLogger","mapEventProps","transformMap","MAX_CHARACTERS_EVENT_NAME","mappedPropNames","sanitizeName","name","sanitizedName","replace","substring","sanitizeEvent","event","products","properties","productCount","fb_num_items","length","params","logTime","timestamp","undefined","Object","keys","forEach","property","values","some","fbProp","_logTime","_appVersion","context","app","version","safeEvent","convertedName","safeName","safeProps","currency","fb_currency","_valueToSum","purchasePrice","logPurchase","logEvent"],"mappings":"AAAA,SAEEA,oBAFF,QAGO,iCAHP;AAKA,SAASC,eAAT,QAAgC,yBAAhC;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,oBAA5C,C,CAEA;;AACA,MAAMC,yBAAyB,GAAG,EAAlC;AACA,MAAMC,eAAe,GAAGL,oBAAoB,CAACE,aAAD,EAAgBC,YAAhB,CAA5C;;AAEA,MAAMG,YAAY,GAAIC,IAAD,IAAkB;AACrC;AACA,MAAIC,aAAa,GAAGD,IAAI,CAACE,OAAL,CAAa,GAAb,EAAkB,GAAlB,CAApB;AAEA,SAAOD,aAAa,CAACE,SAAd,CAAwB,CAAxB,EAA2BN,yBAA3B,CAAP;AACD,CALD;;AAOA,MAAMO,aAAa,GACjBC,KADoB,IAEmB;AAAA;;AACvC,MAAIC,QAAQ,4BAAGD,KAAK,CAACE,UAAN,CAAiBD,QAApB,yEAAgC,EAA5C;AACA,QAAME,YAAY,WAAIH,KAAK,CAACE,UAAN,CAAiBE,YAAjB,IAAiCH,QAAQ,CAACI,MAA9C,uCAAyD,CAA3E;AACA,MAAIC,MAA0C,GAAG,EAAjD;AACA,MAAIC,OAAO,uBAAGP,KAAK,CAACQ,SAAT,+DAAsBC,SAAjC;AAEAC,EAAAA,MAAM,CAACC,IAAP,CAAYX,KAAK,CAACE,UAAlB,EAA8BU,OAA9B,CAAuCC,QAAD,IAAsB;AAC1D,QAAIH,MAAM,CAACI,MAAP,CAAcxB,aAAd,EAA6ByB,IAA7B,CAAmCC,MAAD,IAAYA,MAAM,KAAKH,QAAzD,CAAJ,EAAwE;AACtEP,MAAAA,MAAM,CAACO,QAAD,CAAN,GAAmBb,KAAK,CAACE,UAAN,CAAiBW,QAAjB,CAAnB;AACD;AACF,GAJD;AAMA,SAAO,EACL,GAAGP,MADE;AAELF,IAAAA,YAAY,EAAED,YAFT;AAGLc,IAAAA,QAAQ,EAAEV,OAHL;AAILW,IAAAA,WAAW,EAAElB,KAAK,CAACmB,OAAN,CAAcC,GAAd,CAAkBC;AAJ1B,GAAP;AAMD,CApBD;;AAsBA,gBAAgBrB,KAAD,IAA2B;AAAA;;AACxC,QAAMsB,SAAS,GAAG7B,eAAe,CAACO,KAAD,CAAjC;AACA,MAAIuB,aAAa,GAAGD,SAAS,CAACtB,KAA9B;AACA,MAAIwB,QAAQ,GAAG9B,YAAY,CAAC6B,aAAD,CAA3B;AACA,MAAIE,SAAS,GAAG1B,aAAa,CAACuB,SAAD,CAA7B;AACA,QAAMI,QAAQ,YAAID,SAAS,CAACE,WAAd,yCAAoD,KAAlE;;AAEA,MAAIF,SAAS,CAACG,WAAV,KAA0BnB,SAA9B,EAAyC;AACvC,QAAIoB,aAAa,GAAGJ,SAAS,CAACG,WAA9B;AAEAvC,IAAAA,eAAe,CAACyC,WAAhB,CAA4BD,aAA5B,EAA2CH,QAA3C,EAAqDD,SAArD;AACD,GAJD,MAIO;AACLpC,IAAAA,eAAe,CAAC0C,QAAhB,CAAyBP,QAAzB,EAAmCC,SAAnC;AACD;AACF,CAdD","sourcesContent":["import {\n  TrackEventType,\n  generateMapTransform,\n} from '@segment/analytics-react-native';\n\nimport { AppEventsLogger } from 'react-native-fbsdk-next';\nimport { mapEventProps, transformMap } from './parameterMapping';\n\n// FB Event Names must be <= 40 characters\nconst MAX_CHARACTERS_EVENT_NAME = 40;\nconst mappedPropNames = generateMapTransform(mapEventProps, transformMap);\n\nconst sanitizeName = (name: string) => {\n  //Facebook expects '_' instead of '.'\n  let sanitizedName = name.replace('.', '_');\n\n  return sanitizedName.substring(0, MAX_CHARACTERS_EVENT_NAME);\n};\n\nconst sanitizeEvent = (\n  event: Record<string, any>\n): { [key: string]: string | number } => {\n  let products = event.properties.products ?? [];\n  const productCount = (event.properties.fb_num_items || products.length) ?? 0;\n  let params: { [key: string]: string | number } = {};\n  let logTime = event.timestamp ?? undefined;\n\n  Object.keys(event.properties).forEach((property: string) => {\n    if (Object.values(mapEventProps).some((fbProp) => fbProp === property)) {\n      params[property] = event.properties[property];\n    }\n  });\n\n  return {\n    ...params,\n    fb_num_items: productCount,\n    _logTime: logTime,\n    _appVersion: event.context.app.version,\n  };\n};\n\nexport default (event: TrackEventType) => {\n  const safeEvent = mappedPropNames(event as Record<string, any>);\n  let convertedName = safeEvent.event as string;\n  let safeName = sanitizeName(convertedName);\n  let safeProps = sanitizeEvent(safeEvent);\n  const currency = (safeProps.fb_currency as string | undefined) ?? 'USD';\n\n  if (safeProps._valueToSum !== undefined) {\n    let purchasePrice = safeProps._valueToSum as number;\n\n    AppEventsLogger.logPurchase(purchasePrice, currency, safeProps);\n  } else {\n    AppEventsLogger.logEvent(safeName, safeProps);\n  }\n};\n"]}