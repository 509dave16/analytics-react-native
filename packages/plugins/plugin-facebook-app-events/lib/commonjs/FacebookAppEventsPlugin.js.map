{"version":3,"sources":["FacebookAppEventsPlugin.ts"],"names":["isFBPluginSettings","settings","Object","keys","FacebookAppEventsPlugin","DestinationPlugin","PluginType","destination","configure","analytics","adTrackingEnabled","get","onChange","value","Settings","setAdvertiserTrackingEnabled","initializeSDK","e","console","log","setDataProcessingOptions","update","_","fbSettings","integrations","key","trackScreens","trackScreenEvent","track","event","screen"],"mappings":";;;;;;;AAAA;;AASA;;AACA;;AAGA;;;;;;AAMA,MAAMA,kBAAkB,GACtBC,QADyB,IAEQ;AACjC,SACE,OAAOA,QAAP,KAAoB,QAApB,IAAgC,sBAAsBC,MAAM,CAACC,IAAP,CAAYF,QAAZ,CADxD;AAGD,CAND;;AAQO,MAAMG,uBAAN,SAAsCC,uCAAtC,CAAwD;AAAA;AAAA;;AAAA,kCACtDC,iCAAWC,WAD2C;;AAAA,iCAEvD,qBAFuD;;AAAA,0CAG9C,KAH8C;AAAA;;AAK9C,QAATC,SAAS,CAACC,SAAD,EAA2B;AAAA;;AACxC,SAAKA,SAAL,GAAiBA,SAAjB;AACA,QAAIC,iBAAiB,sBAAG,KAAKD,SAAR,oDAAG,gBAAgBC,iBAAhB,CAAkCC,GAAlC,EAAxB;AAEA,SAAKF,SAAL,CAAeC,iBAAf,CAAiCE,QAAjC,CAA2CC,KAAD,IAAW;AACnDC,qCAASC,4BAAT,CAAsCF,KAAtC;AACD,KAFD,EAJwC,CAQxC;AACA;;AACA,UAAMC,+BAASE,aAAT,EAAN;;AAEA,QAAIN,iBAAJ,EAAuB;AACrB,UAAI;AACF,cAAMI,+BAASC,4BAAT,CAAsC,IAAtC,CAAN;AACD,OAFD,CAEE,OAAOE,CAAP,EAAU;AACV;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CF,CAA1C;AACD;AACF,KAnBuC,CAqBxC;;;AACAH,mCAASM,wBAAT,CAAkC,EAAlC,EAAsC,CAAtC,EAAyC,CAAzC;AACD;;AAEDC,EAAAA,MAAM,CAACpB,QAAD,EAA+BqB,CAA/B,EAA8C;AAClD,UAAMC,UAAU,GAAGtB,QAAQ,CAACuB,YAAT,CAAsB,KAAKC,GAA3B,CAAnB;;AAEA,QAAIzB,kBAAkB,CAACuB,UAAD,CAAtB,EAAoC;AAClC,WAAKG,YAAL,GAAoBH,UAAU,CAACI,gBAA/B;AACD;AACF;;AAEDC,EAAAA,KAAK,CAACC,KAAD,EAAwB;AAC3B,wBAAMA,KAAN;AACA,WAAOA,KAAP;AACD;;AAEDC,EAAAA,MAAM,CAACD,KAAD,EAAyB;AAC7B,QAAI,KAAKH,YAAL,KAAsB,IAA1B,EAAgC;AAC9B,2BAAOG,KAAP;AACD;;AACD,WAAOA,KAAP;AACD;;AAhD4D","sourcesContent":["import {\n  DestinationPlugin,\n  PluginType,\n  TrackEventType,\n  ScreenEventType,\n  SegmentAPISettings,\n  UpdateType,\n  IntegrationSettings,\n} from '@segment/analytics-react-native';\nimport track from './methods/track';\nimport screen from './methods/screen';\nimport type { SegmentClient } from '@segment/analytics-react-native/src/analytics';\n\nimport { Settings } from 'react-native-fbsdk-next';\n\ninterface FBPluginSettings extends Record<string, any> {\n  trackScreenEvent: boolean;\n}\n\nconst isFBPluginSettings = (\n  settings: IntegrationSettings\n): settings is FBPluginSettings => {\n  return (\n    typeof settings === 'object' && 'trackScreenEvent' in Object.keys(settings)\n  );\n};\n\nexport class FacebookAppEventsPlugin extends DestinationPlugin {\n  type = PluginType.destination;\n  key = 'Facebook App Events';\n  trackScreens = false;\n\n  async configure(analytics: SegmentClient) {\n    this.analytics = analytics;\n    let adTrackingEnabled = this.analytics?.adTrackingEnabled.get();\n\n    this.analytics.adTrackingEnabled.onChange((value) => {\n      Settings.setAdvertiserTrackingEnabled(value);\n    });\n\n    //you will likely need consent first\n    //this example assumes consentManager plugin is used\n    await Settings.initializeSDK();\n\n    if (adTrackingEnabled) {\n      try {\n        await Settings.setAdvertiserTrackingEnabled(true);\n      } catch (e) {\n        //handle error\n        console.log('Add Tracking Enabled Error', e);\n      }\n    }\n\n    //default facebook data processing options\n    Settings.setDataProcessingOptions([], 0, 0);\n  }\n\n  update(settings: SegmentAPISettings, _: UpdateType) {\n    const fbSettings = settings.integrations[this.key];\n\n    if (isFBPluginSettings(fbSettings)) {\n      this.trackScreens = fbSettings.trackScreenEvent;\n    }\n  }\n\n  track(event: TrackEventType) {\n    track(event);\n    return event;\n  }\n\n  screen(event: ScreenEventType) {\n    if (this.trackScreens === true) {\n      screen(event);\n    }\n    return event;\n  }\n}\n"]}