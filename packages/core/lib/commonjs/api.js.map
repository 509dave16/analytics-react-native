{"version":3,"sources":["api.ts"],"names":["sendEvents","config","events","fetch","batchApi","method","body","JSON","stringify","batch","sentAt","Date","toISOString","writeKey","headers","Base64","encode"],"mappings":";;;;;;;AACA;;AACA;;AAEO,MAAMA,UAAU,GAAG,cAMpB;AAAA,MAN2B;AAC/BC,IAAAA,MAD+B;AAE/BC,IAAAA;AAF+B,GAM3B;AACJ,QAAMC,KAAK,CAACC,mBAAD,EAAW;AACpBC,IAAAA,MAAM,EAAE,MADY;AAEpBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,MAAAA,KAAK,EAAEP,MADY;AAEnBQ,MAAAA,MAAM,EAAE,IAAIC,IAAJ,GAAWC,WAAX,EAFW;AAGnBC,MAAAA,QAAQ,EAAEZ,MAAM,CAACY;AAHE,KAAf,CAFc;AAOpBC,IAAAA,OAAO,EAAE;AACP,uBAAkB,SAAQC,eAAOC,MAAP,CAAe,GAAEf,MAAM,CAACY,QAAS,GAAjC,CAAqC,EADxD;AAEP,sBAAgB;AAFT;AAPW,GAAX,CAAX;AAYD,CAnBM","sourcesContent":["import type { Config, SegmentEvent } from './types';\nimport { Base64 } from 'js-base64';\nimport { batchApi } from './constants';\n\nexport const sendEvents = async ({\n  config,\n  events,\n}: {\n  config: Config;\n  events: SegmentEvent[];\n}) => {\n  await fetch(batchApi, {\n    method: 'POST',\n    body: JSON.stringify({\n      batch: events,\n      sentAt: new Date().toISOString(),\n      writeKey: config.writeKey,\n    }),\n    headers: {\n      'Authorization': `Basic ${Base64.encode(`${config.writeKey}:`)}`,\n      'Content-Type': 'text/plain',\n    },\n  });\n};\n"]}