{"version":3,"sources":["events.ts"],"names":["createTrackEvent","event","properties","type","EventType","TrackEvent","createScreenEvent","name","ScreenEvent","createIdentifyEvent","userId","userTraits","IdentifyEvent","traits","createGroupEvent","groupId","groupTraits","GroupEvent","createAliasEvent","anonymousId","newUserId","AliasEvent","previousId","isAliasEvent","isIdentifyEvent","applyRawEventData","userInfo","messageId","timestamp","Date","toISOString","integrations"],"mappings":";;;;;;;AAAA;;AAEA;;AAcO,MAAMA,gBAAgB,GAAG;AAAA,MAAC;AAC/BC,IAAAA,KAD+B;AAE/BC,IAAAA,UAAU,GAAG;AAFkB,GAAD;AAAA,SAMT;AACrBC,IAAAA,IAAI,EAAEC,iBAAUC,UADK;AAErBJ,IAAAA,KAFqB;AAGrBC,IAAAA;AAHqB,GANS;AAAA,CAAzB;;;;AAYA,MAAMI,iBAAiB,GAAG;AAAA,MAAC;AAChCC,IAAAA,IADgC;AAEhCL,IAAAA,UAAU,GAAG;AAFmB,GAAD;AAAA,SAMT;AACtBC,IAAAA,IAAI,EAAEC,iBAAUI,WADM;AAEtBD,IAAAA,IAFsB;AAGtBL,IAAAA;AAHsB,GANS;AAAA,CAA1B;;;;AAYA,MAAMO,mBAAmB,GAAG,SAMV;AAAA,MANW;AAClCC,IAAAA,MADkC;AAElCC,IAAAA,UAAU,GAAG;AAFqB,GAMX;AACvB,SAAO;AACLR,IAAAA,IAAI,EAAEC,iBAAUQ,aADX;AAELF,IAAAA,MAAM,EAAEA,MAFH;AAGLG,IAAAA,MAAM,EAAEF;AAHH,GAAP;AAKD,CAZM;;;;AAcA,MAAMG,gBAAgB,GAAG;AAAA,MAAC;AAC/BC,IAAAA,OAD+B;AAE/BC,IAAAA,WAAW,GAAG;AAFiB,GAAD;AAAA,SAMT;AACrBb,IAAAA,IAAI,EAAEC,iBAAUa,UADK;AAErBF,IAAAA,OAFqB;AAGrBF,IAAAA,MAAM,EAAEG;AAHa,GANS;AAAA,CAAzB;;;;AAYA,MAAME,gBAAgB,GAAG;AAAA,MAAC;AAC/BC,IAAAA,WAD+B;AAE/BT,IAAAA,MAF+B;AAG/BU,IAAAA;AAH+B,GAAD;AAAA,SAQT;AACrBjB,IAAAA,IAAI,EAAEC,iBAAUiB,UADK;AAErBX,IAAAA,MAAM,EAAEU,SAFa;AAGrBE,IAAAA,UAAU,EAAEZ,MAAM,IAAIS;AAHD,GARS;AAAA,CAAzB;;;;AAcP,MAAMI,YAAY,GAAItB,KAAD,IACnBA,KAAK,CAACE,IAAN,KAAeC,iBAAUiB,UAD3B;;AAEA,MAAMG,eAAe,GAAIvB,KAAD,IACtBA,KAAK,CAACE,IAAN,KAAeC,iBAAUQ,aAD3B;;AAGO,MAAMa,iBAAiB,GAAG,CAC/BxB,KAD+B,EAE/ByB,QAF+B,KAGd;AAAA;;AACjB,SAAO,EACL,GAAGzB,KADE;AAELkB,IAAAA,WAAW,EAAEO,QAAQ,CAACP,WAFjB;AAGLQ,IAAAA,SAAS,EAAE,oBAHN;AAILC,IAAAA,SAAS,EAAE,IAAIC,IAAJ,GAAWC,WAAX,EAJN;AAKLC,IAAAA,YAAY,yBAAE9B,KAAK,CAAC8B,YAAR,qEAAwB,EAL/B;AAMLrB,IAAAA,MAAM,EACJa,YAAY,CAACtB,KAAD,CAAZ,IAAuBuB,eAAe,CAACvB,KAAD,CAAtC,GACIA,KAAK,CAACS,MADV,GAEIgB,QAAQ,CAAChB;AATV,GAAP;AAWD,CAfM","sourcesContent":["import { getUUID } from './uuid';\n\nimport {\n  GroupEventType,\n  GroupTraits,\n  IdentifyEventType,\n  JsonMap,\n  ScreenEventType,\n  TrackEventType,\n  UserTraits,\n  AliasEventType,\n  EventType,\n  SegmentEvent,\n  UserInfoState,\n} from './types';\n\nexport const createTrackEvent = ({\n  event,\n  properties = {},\n}: {\n  event: string;\n  properties?: JsonMap;\n}): TrackEventType => ({\n  type: EventType.TrackEvent,\n  event,\n  properties,\n});\n\nexport const createScreenEvent = ({\n  name,\n  properties = {},\n}: {\n  name: string;\n  properties?: JsonMap;\n}): ScreenEventType => ({\n  type: EventType.ScreenEvent,\n  name,\n  properties,\n});\n\nexport const createIdentifyEvent = ({\n  userId,\n  userTraits = {},\n}: {\n  userId?: string;\n  userTraits?: UserTraits;\n}): IdentifyEventType => {\n  return {\n    type: EventType.IdentifyEvent,\n    userId: userId,\n    traits: userTraits,\n  };\n};\n\nexport const createGroupEvent = ({\n  groupId,\n  groupTraits = {},\n}: {\n  groupId: string;\n  groupTraits?: GroupTraits;\n}): GroupEventType => ({\n  type: EventType.GroupEvent,\n  groupId,\n  traits: groupTraits,\n});\n\nexport const createAliasEvent = ({\n  anonymousId,\n  userId,\n  newUserId,\n}: {\n  anonymousId: string;\n  userId?: string;\n  newUserId: string;\n}): AliasEventType => ({\n  type: EventType.AliasEvent,\n  userId: newUserId,\n  previousId: userId || anonymousId,\n});\n\nconst isAliasEvent = (event: SegmentEvent): event is AliasEventType =>\n  event.type === EventType.AliasEvent;\nconst isIdentifyEvent = (event: SegmentEvent): event is AliasEventType =>\n  event.type === EventType.IdentifyEvent;\n\nexport const applyRawEventData = (\n  event: SegmentEvent,\n  userInfo: UserInfoState\n): SegmentEvent => {\n  return {\n    ...event,\n    anonymousId: userInfo.anonymousId,\n    messageId: getUUID(),\n    timestamp: new Date().toISOString(),\n    integrations: event.integrations ?? {},\n    userId:\n      isAliasEvent(event) || isIdentifyEvent(event)\n        ? event.userId\n        : userInfo.userId,\n  };\n};\n"]}