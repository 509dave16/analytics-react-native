{"version":3,"sources":["client.tsx"],"names":["React","createContext","useContext","defaultConfig","createLogger","SegmentClient","SovranStorage","createClient","config","logger","debug","enable","disable","clientConfig","segmentStore","storeId","writeKey","storePersistor","client","store","init","Context","AnalyticsProvider","children","useAnalytics","console","error","screen","track","identify","flush","group","alias","reset"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AAEA,SAASC,aAAT,QAA8B,aAA9B;AAEA,SAASC,YAAT,QAA6B,UAA7B;AACA,SAASC,aAAT,QAA8B,aAA9B;AACA,SAASC,aAAT,QAA8B,WAA9B;AAEA,OAAO,MAAMC,YAAY,GAAIC,MAAD,IAAoB;AAC9C,QAAMC,MAAM,GAAGL,YAAY,EAA3B;;AACA,MAAI,QAAOI,MAAP,aAAOA,MAAP,uBAAOA,MAAM,CAAEE,KAAf,MAAyB,SAA7B,EAAwC;AACtC,QAAIF,MAAM,CAACE,KAAX,EAAkB;AAChBD,MAAAA,MAAM,CAACE,MAAP;AACD,KAFD,MAEO;AACLF,MAAAA,MAAM,CAACG,OAAP;AACD;AACF;;AACD,QAAMC,YAAY,GAAG,EAAE,GAAGV,aAAL;AAAoB,OAAGK;AAAvB,GAArB;AAEA,QAAMM,YAAY,GAAG,IAAIR,aAAJ,CAAkB;AACrCS,IAAAA,OAAO,EAAEP,MAAM,CAACQ,QADqB;AAErCC,IAAAA,cAAc,EAAET,MAAM,CAACS;AAFc,GAAlB,CAArB;AAKA,QAAMC,MAAM,GAAG,IAAIb,aAAJ,CAAkB;AAC/BG,IAAAA,MAAM,EAAEK,YADuB;AAE/BJ,IAAAA,MAF+B;AAG/BU,IAAAA,KAAK,EAAEL;AAHwB,GAAlB,CAAf;AAMAI,EAAAA,MAAM,CAACE,IAAP;AAEA,SAAOF,MAAP;AACD,CAzBM;AA2BP,MAAMG,OAAO,gBAAGpB,aAAa,CAAuB,IAAvB,CAA7B;AAEA,OAAO,MAAMqB,iBAAiB,GAAG,QAM3B;AAAA,MAN4B;AAChCJ,IAAAA,MADgC;AAEhCK,IAAAA;AAFgC,GAM5B;;AACJ,MAAI,CAACL,MAAL,EAAa;AACX,WAAO,IAAP;AACD;;AAED,sBAAO,oBAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAEA;AAAzB,KAAkCK,QAAlC,CAAP;AACD,CAZM;AAcP,OAAO,MAAMC,YAAY,GAAG,MAAqB;AAC/C,QAAMN,MAAM,GAAGhB,UAAU,CAACmB,OAAD,CAAzB;;AACA,MAAI,CAACH,MAAL,EAAa;AACXO,IAAAA,OAAO,CAACC,KAAR,CACE,gCADF,EAEE,+FAFF,EADW,CAMX;;AACA,WAAO,EAAP;AACD;;AACD,SAAO;AACLC,IAAAA,MAAM,EAAE;AAAA,aAAaT,MAAM,CAACS,MAAP,CAAc,YAAd,CAAb;AAAA,KADH;AAELC,IAAAA,KAAK,EAAE;AAAA,aAAaV,MAAM,CAACU,KAAP,CAAa,YAAb,CAAb;AAAA,KAFF;AAGLC,IAAAA,QAAQ,EAAE;AAAA,aAAaX,MAAM,CAACW,QAAP,CAAgB,YAAhB,CAAb;AAAA,KAHL;AAILC,IAAAA,KAAK,EAAE,MAAMZ,MAAM,CAACY,KAAP,EAJR;AAKLC,IAAAA,KAAK,EAAE;AAAA,aAAab,MAAM,CAACa,KAAP,CAAa,YAAb,CAAb;AAAA,KALF;AAMLC,IAAAA,KAAK,EAAE;AAAA,aAAad,MAAM,CAACc,KAAP,CAAa,YAAb,CAAb;AAAA,KANF;AAOLC,IAAAA,KAAK,EAAE;AAAA,aAAaf,MAAM,CAACe,KAAP,CAAa,YAAb,CAAb;AAAA;AAPF,GAAP;AASD,CApBM","sourcesContent":["import React, { createContext, useContext } from 'react';\n\nimport { defaultConfig } from './constants';\nimport type { Config, ClientMethods } from './types';\nimport { createLogger } from './logger';\nimport { SegmentClient } from './analytics';\nimport { SovranStorage } from './storage';\n\nexport const createClient = (config: Config) => {\n  const logger = createLogger();\n  if (typeof config?.debug === 'boolean') {\n    if (config.debug) {\n      logger.enable();\n    } else {\n      logger.disable();\n    }\n  }\n  const clientConfig = { ...defaultConfig, ...config };\n\n  const segmentStore = new SovranStorage({\n    storeId: config.writeKey,\n    storePersistor: config.storePersistor,\n  });\n\n  const client = new SegmentClient({\n    config: clientConfig,\n    logger,\n    store: segmentStore,\n  });\n\n  client.init();\n\n  return client;\n};\n\nconst Context = createContext<SegmentClient | null>(null);\n\nexport const AnalyticsProvider = ({\n  client,\n  children,\n}: {\n  client?: SegmentClient;\n  children?: any;\n}) => {\n  if (!client) {\n    return null;\n  }\n\n  return <Context.Provider value={client}>{children}</Context.Provider>;\n};\n\nexport const useAnalytics = (): ClientMethods => {\n  const client = useContext(Context);\n  if (!client) {\n    console.error(\n      'Segment client not configured!',\n      'To use the useAnalytics() hook, pass an initialized Segment client into the AnalyticsProvider'\n    );\n\n    // @ts-ignore\n    return {};\n  }\n  return {\n    screen: (...args) => client.screen(...args),\n    track: (...args) => client.track(...args),\n    identify: (...args) => client.identify(...args),\n    flush: () => client.flush(),\n    group: (...args) => client.group(...args),\n    alias: (...args) => client.alias(...args),\n    reset: (...args) => client.reset(...args),\n  };\n};\n"]}